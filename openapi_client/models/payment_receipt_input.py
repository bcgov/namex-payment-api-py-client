# coding: utf-8

"""
    SBC Pay API Reference

    BC Registries Pay API reference documentation  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class PaymentReceiptInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'corp_name': 'str',
        'business_number': 'str',
        'recognition_date_time': 'str',
        'filing_identifier': 'str',
        'filing_date_time': 'str',
        'file_name': 'str'
    }

    attribute_map = {
        'corp_name': 'corpName',
        'business_number': 'businessNumber',
        'recognition_date_time': 'recognitionDateTime',
        'filing_identifier': 'filingIdentifier',
        'filing_date_time': 'filingDateTime',
        'file_name': 'fileName'
    }

    def __init__(self, corp_name=None, business_number=None, recognition_date_time=None, filing_identifier=None, filing_date_time=None, file_name=None, local_vars_configuration=None):  # noqa: E501
        """PaymentReceiptInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._corp_name = None
        self._business_number = None
        self._recognition_date_time = None
        self._filing_identifier = None
        self._filing_date_time = None
        self._file_name = None
        self.discriminator = None

        if corp_name is not None:
            self.corp_name = corp_name
        if business_number is not None:
            self.business_number = business_number
        if recognition_date_time is not None:
            self.recognition_date_time = recognition_date_time
        if filing_identifier is not None:
            self.filing_identifier = filing_identifier
        if filing_date_time is not None:
            self.filing_date_time = filing_date_time
        if file_name is not None:
            self.file_name = file_name

    @property
    def corp_name(self):
        """Gets the corp_name of this PaymentReceiptInput.  # noqa: E501


        :return: The corp_name of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._corp_name

    @corp_name.setter
    def corp_name(self, corp_name):
        """Sets the corp_name of this PaymentReceiptInput.


        :param corp_name: The corp_name of this PaymentReceiptInput.  # noqa: E501
        :type corp_name: str
        """

        self._corp_name = corp_name

    @property
    def business_number(self):
        """Gets the business_number of this PaymentReceiptInput.  # noqa: E501


        :return: The business_number of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._business_number

    @business_number.setter
    def business_number(self, business_number):
        """Sets the business_number of this PaymentReceiptInput.


        :param business_number: The business_number of this PaymentReceiptInput.  # noqa: E501
        :type business_number: str
        """

        self._business_number = business_number

    @property
    def recognition_date_time(self):
        """Gets the recognition_date_time of this PaymentReceiptInput.  # noqa: E501


        :return: The recognition_date_time of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._recognition_date_time

    @recognition_date_time.setter
    def recognition_date_time(self, recognition_date_time):
        """Sets the recognition_date_time of this PaymentReceiptInput.


        :param recognition_date_time: The recognition_date_time of this PaymentReceiptInput.  # noqa: E501
        :type recognition_date_time: str
        """

        self._recognition_date_time = recognition_date_time

    @property
    def filing_identifier(self):
        """Gets the filing_identifier of this PaymentReceiptInput.  # noqa: E501


        :return: The filing_identifier of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._filing_identifier

    @filing_identifier.setter
    def filing_identifier(self, filing_identifier):
        """Sets the filing_identifier of this PaymentReceiptInput.


        :param filing_identifier: The filing_identifier of this PaymentReceiptInput.  # noqa: E501
        :type filing_identifier: str
        """

        self._filing_identifier = filing_identifier

    @property
    def filing_date_time(self):
        """Gets the filing_date_time of this PaymentReceiptInput.  # noqa: E501


        :return: The filing_date_time of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._filing_date_time

    @filing_date_time.setter
    def filing_date_time(self, filing_date_time):
        """Sets the filing_date_time of this PaymentReceiptInput.


        :param filing_date_time: The filing_date_time of this PaymentReceiptInput.  # noqa: E501
        :type filing_date_time: str
        """

        self._filing_date_time = filing_date_time

    @property
    def file_name(self):
        """Gets the file_name of this PaymentReceiptInput.  # noqa: E501


        :return: The file_name of this PaymentReceiptInput.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this PaymentReceiptInput.


        :param file_name: The file_name of this PaymentReceiptInput.  # noqa: E501
        :type file_name: str
        """

        self._file_name = file_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PaymentReceiptInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PaymentReceiptInput):
            return True

        return self.to_dict() != other.to_dict()
